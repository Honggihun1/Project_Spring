/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.59
 * Generated at: 2022-08-18 00:55:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("/* 화면 너비 0 ~ 1200px */\r\n");
      out.write("@media (max-width: 1220px){\r\n");
      out.write("    aside {width: 40%;}\r\n");
      out.write("    section {width: 60%;}\r\n");
      out.write("    article {width: 100%; height: 300px;}\r\n");
      out.write("}\r\n");
      out.write("/* 화면 너비 0 ~ 768px */\r\n");
      out.write("@media (max-width: 768px){\r\n");
      out.write("    aside {width: 100%; height: 300px;}\r\n");
      out.write("    section {width: 100%; height: 300px;}\r\n");
      out.write("}\r\n");
      out.write("/* 화면 너비 0 ~ 480px */\r\n");
      out.write("@media (max-width: 480px){\r\n");
      out.write("    header {height: 300px;}\r\n");
      out.write("    aside {height: 200px;}\r\n");
      out.write("    section {height: 200px;}\r\n");
      out.write("}\r\n");
      out.write("h4{\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	margin-block-start: 1em;\r\n");
      out.write("    margin-block-end: 1em;\r\n");
      out.write("    margin: 5px 0;\r\n");
      out.write("}\r\n");
      out.write("html { \r\n");
      out.write("	background: url(\"resources/images/background.jpg\") no-repeat center center fixed; \r\n");
      out.write("	-webkit-background-size: cover;\r\n");
      out.write("	-moz-background-size: cover;\r\n");
      out.write("	-o-background-size: cover;\r\n");
      out.write("	background-size: cover;\r\n");
      out.write("}\r\n");
      out.write("body {\r\n");
      out.write("	device-height:100%;\r\n");
      out.write("	device-width:100%;\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".join {\r\n");
      out.write("    width: 630px;\r\n");
      out.write("    height: 700px;\r\n");
      out.write("    background: #e9e9e9;\r\n");
      out.write("    border-radius: 20px;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    position: absolute;\r\n");
      out.write("  	left:50%; top:50%;\r\n");
      out.write("	transform:translate(-50%, -50%);\r\n");
      out.write(" 	opacity: 0.9;\r\n");
      out.write("}\r\n");
      out.write("p { margin: 20px auto; color: #3367d6; text-align: left;}\r\n");
      out.write(".valid, .invalid { font-size:14px; font-weight:bold; } \r\n");
      out.write(".valid { color:green }\r\n");
      out.write(".invalid { color:red }\r\n");
      out.write("#delete { position: relative; right: 30px; }\r\n");
      out.write("input {\r\n");
      out.write("	width: 280px;\r\n");
      out.write("    height: 30px;\r\n");
      out.write("    padding: 0 10px;\r\n");
      out.write("    font-size: 15px;\r\n");
      out.write("    border: 1px solid #AB92BF;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a.btn-fill-s{\r\n");
      out.write("	padding: 3px 10px;\r\n");
      out.write("	border:1px solid #c4dafc;\r\n");
      out.write("	border-radius:3px;\r\n");
      out.write("	background-color: #cdcbe8;\r\n");
      out.write("    color: #3367d6;\r\n");
      out.write("	font-size:13px;\r\n");
      out.write("	font-weight:bold;\r\n");
      out.write("	box-shadow: 2px 2px 3px #a7a7a7;\r\n");
      out.write("}\r\n");
      out.write(".btnSet { margin-top:30px; margin-bottom:30px; }\r\n");
      out.write("a.btn-empty {\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("	color:#3367d6;	\r\n");
      out.write("}\r\n");
      out.write("a {\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("a.btn-fill, a.btn-empty {\r\n");
      out.write("	height: 28px;\r\n");
      out.write("    padding: 3px 15px;\r\n");
      out.write("    border: 1px solid #9593b1;\r\n");
      out.write("    border-radius: 3px;\r\n");
      out.write("    box-shadow: 2px 2px 3px #a7a7a7;\r\n");
      out.write("    margin: 0 10px;\r\n");
      out.write("} \r\n");
      out.write("a.btn-fill {\r\n");
      out.write("    background-color: #cdcbe8;\r\n");
      out.write("    color: #3367d6;\r\n");
      out.write("}\r\n");
      out.write(".input_box {\r\n");
      out.write("    display: block;\r\n");
      out.write("    position: relative;\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    height: 29px;\r\n");
      out.write("    line-height: 29px;\r\n");
      out.write("    border: none;\r\n");
      out.write("    background: #fff;\r\n");
      out.write("    font-size: 15px;\r\n");
      out.write("    box-sizing: border-box;\r\n");
      out.write("    z-index: 10;\r\n");
      out.write("}\r\n");
      out.write(".rad{\r\n");
      out.write("	border-radius: 11px;\r\n");
      out.write("}\r\n");
      out.write("#container{\r\n");
      out.write("	width: 400px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("	<h1 style=\"display: none;\">1</h1>\r\n");
      out.write("</header>\r\n");
      out.write("<div class=\"join\">\r\n");
      out.write("<h3>회원가입</h3>\r\n");
      out.write("<p>* 항목은 필수입력입니다</p>\r\n");
      out.write("<form action='join' method='post'>\r\n");
      out.write("<div id=\"container\">\r\n");
      out.write("	<div>\r\n");
      out.write("		<h4>* 아이디</h4>\r\n");
      out.write("		<input type='text' name='teacher_id' class='chk rad' >\r\n");
      out.write("		<a class='btn-fill-s' onclick='id_check()'>중복확인</a>\r\n");
      out.write("		<br>\r\n");
      out.write("		<div><span class='valid'>아이디를 입력하세요</span></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<div>\r\n");
      out.write("		<h4>* 비밀번호</h4>\r\n");
      out.write("		<input type='password' name='teacher_pw' class='rad'><br>\r\n");
      out.write("		<div><span class='valid'>비밀번호를 입력하세요</span></div>\r\n");
      out.write("		\r\n");
      out.write("		<h4><label>* 비밀번호 확인</label></h4>\r\n");
      out.write("		<input type='password' name='pw_ck' class='rad'><br>\r\n");
      out.write("		<div><span class='valid'>비밀번호를 다시 입력하세요</span></div>\r\n");
      out.write("	</div>		\r\n");
      out.write("		\r\n");
      out.write("		<h4><label>* 성명</label></h4>\r\n");
      out.write("		<input type='text' name='teacher_name' class='rad'>\r\n");
      out.write("	<div>\r\n");
      out.write("		<h4><label>이메일</label></h4>\r\n");
      out.write("		<input type='text' name='email' class='rad'><br>\r\n");
      out.write("		<div><span class='valid'>이메일을 입력하세요</span></div>\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("		<h4><label>전화번호</label></h4>\r\n");
      out.write("		<input type='text' name='teacher_phone' maxlength=\"13\" class='rad'>\r\n");
      out.write("	\r\n");
      out.write("</div>\r\n");
      out.write("</form>\r\n");
      out.write("<div class='btnSet'>\r\n");
      out.write("	<a class='btn-fill' onclick='join()'>회원가입</a>\r\n");
      out.write("	<a class='btn-empty' onclick='history.go(-1)'>취소</a>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script src=\"https://code.jquery.com/ui/1.13.1/jquery-ui.min.js\"></script>\r\n");
      out.write("<script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<script src='resources/js/member_check.js?'></script>\r\n");
      out.write("<script>\r\n");
      out.write("//아이디 중복확인 요청\r\n");
      out.write("function id_check(){\r\n");
      out.write("	var $id = $('[name=teacher_id]');\r\n");
      out.write("	if( $id.hasClass('chked') ) return;  //이미 중복확인했다면 다시 할 필요없음\r\n");
      out.write("		\r\n");
      out.write("	var data = member.tag_status( $id );\r\n");
      out.write("	if( data.code=='invalid' ){\r\n");
      out.write("		alert( '아이디 중복확인 불필요!\\n' + data.desc );\r\n");
      out.write("		$id.focus();\r\n");
      out.write("		return;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	$.ajax({\r\n");
      out.write("		url: 'id_check',\r\n");
      out.write("		data: { id: $id.val() },\r\n");
      out.write("		success: function( response ){\r\n");
      out.write("			$id.addClass('chked');\r\n");
      out.write("			//false(사용가능아이디) : true(이미사용중인아이디)\r\n");
      out.write("			response = member.id_usable( !response );\r\n");
      out.write("			$id.siblings('div').text( response.desc )\r\n");
      out.write("					.removeClass().addClass( response.code );\r\n");
      out.write("			\r\n");
      out.write("		},error: function(req,text){\r\n");
      out.write("			alert(text+':'+req.status);\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$('.chk').keyup(function(e){\r\n");
      out.write("	if( $(this).attr('name')=='teacher_id' && e.keyCode==13 ){\r\n");
      out.write("		id_check();\r\n");
      out.write("	}else{\r\n");
      out.write("		//아이디 태그에 뭔가 입력한다면 중복확인했음을 삭제 \r\n");
      out.write("		if( $(this).attr('name')=='teacher_id' ) $(this).removeClass('chked')\r\n");
      out.write("			\r\n");
      out.write("		var status = member.tag_status( $(this) );\r\n");
      out.write("		$(this).siblings('div').text( status.desc )\r\n");
      out.write("			.removeClass().addClass( status.code );\r\n");
      out.write("	}\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("//form태그 submit처리\r\n");
      out.write("function join(){\r\n");
      out.write("	if( $('[name=teacher_name]').val()=='' ){\r\n");
      out.write("		alert('성명을 입력하세요');\r\n");
      out.write("		$('[name=teacher_name]').focus();\r\n");
      out.write("		return;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//아이디인 경우: 중복확인여부\r\n");
      out.write("	if( $('[name=teacher_id]').hasClass('chked') ){\r\n");
      out.write("		//중복확인했고 + invalid -> 이미 사용중인 아이디 \r\n");
      out.write("		if( $('[name=teacher_id]').siblings('div').hasClass('invalid') ){\r\n");
      out.write("			alert( '회원가입 불가\\n' + member.id.unusable.desc );\r\n");
      out.write("			$('[name=teacher_id]').focus();\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("	}else{\r\n");
      out.write("		//중복확인하지 않은 경우\r\n");
      out.write("		if( ! validate_check( $('[name=teacher_id]') ) ) return;\r\n");
      out.write("		else{\r\n");
      out.write("			alert( '회원가입 불가\\n' + member.id.valid.desc );\r\n");
      out.write("			$('[name=teacher_id]').focus();\r\n");
      out.write("			return;\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//비번, 비번확인, 이메일\r\n");
      out.write("	if( ! validate_check( $('[name=teacher_pw]') ) ) return;\r\n");
      out.write("	if( ! validate_check( $('[name=pw_ck]') ) ) return;\r\n");
      out.write("	if( ! validate_check( $('[name=email]') ) ) return;\r\n");
      out.write("	$('form').submit();\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//각 태그의 상태를 확인\r\n");
      out.write("function validate_check(tag){\r\n");
      out.write("	var data = member.tag_status( tag );\r\n");
      out.write("	if( data.code=='valid' )	return true;\r\n");
      out.write("	else {\r\n");
      out.write("		alert('회원가입 불가\\n' + data.desc);\r\n");
      out.write("		tag.focus();\r\n");
      out.write("		return false;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
